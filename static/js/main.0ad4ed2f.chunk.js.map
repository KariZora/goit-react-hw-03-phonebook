{"version":3,"sources":["components/ContactForm/ContactForm.js","components/ContactsList/ContactsList.js","components/Filter/Filter.js","components/Section/Section.js","App.js","index.js"],"names":["ContactForm","onAdd","useState","name","setName","number","setNumber","onSubmit","e","preventDefault","id","uuid","style","margin","type","placeholder","value","onChange","target","required","ContactsList","contacts","onRemove","map","contact","charAt","toUpperCase","slice","onClick","Filter","filterName","Section","title","children","backgroundColor","textAlign","App","JSON","parse","localStorage","getItem","setContacts","setFilter","useEffect","setItem","stringify","contactsList","filter","toLowerCase","includes","newContact","length","alert","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oPAkEeA,EA7DK,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAAY,EACTC,mBAAS,IADA,mBAC1BC,EAD0B,KACpBC,EADoB,OAELF,mBAAS,IAFJ,mBAE1BG,EAF0B,KAElBC,EAFkB,KAqBjC,OACE,uBACEC,SAnBqB,SAACC,GACxBA,EAAEC,iBACF,IAAMC,EAAKC,cAENR,GAASE,GAEZJ,EAAM,CACJS,KACAP,OACAE,aAGFD,EAAQ,IACRE,EAAU,MAOVM,MAAO,CACLC,OAAQ,UAHZ,UAME,yCAEE,uBACEC,KAAK,OACLX,KAAK,OACLY,YAAY,aACZC,MAAOb,EACPc,SAAU,SAACT,GAAD,OAAOJ,EAAQI,EAAEU,OAAOF,QAClCG,UAAQ,OAIZ,2CAEE,uBACEL,KAAK,MACLX,KAAK,SACLY,YAAY,qBACZC,MAAOX,EACPY,SAAU,SAACT,GAAD,OAAOF,EAAUE,EAAEU,OAAOF,QACpCG,UAAQ,OAIZ,wBAAQL,KAAK,SAAb,6BC9BSM,EAzBM,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAChC,OACE,6BACGD,EAASE,KAAI,SAACC,GAAD,OACZ,+BACGA,EAAQrB,KAAKsB,OAAO,GAAGC,cAAgBF,EAAQrB,KAAKwB,MAAM,GAD7D,IACkE,IAC/DH,EAAQnB,OACT,wBAAQuB,QAAS,kBAAMN,EAASE,EAAQd,KAAxC,sBAHOc,EAAQd,UCqBVmB,EAzBA,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,WAAYb,EAAe,EAAfA,SAC5B,OACE,sBACEL,MAAO,CACLC,OAAQ,UAFZ,SAKE,0DAEE,uBACEC,KAAK,OACLX,KAAK,OACLa,MAAOc,EACPf,YAAY,wBACZE,SAAU,SAACT,GAAD,OAAOS,EAAST,EAAEU,OAAOF,gBCA9Be,EAhBC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,gCACE,oBACErB,MAAO,CACLsB,gBAAiB,SACjBC,UAAW,UAHf,SAMGH,IAEFC,MC2CQG,MA/Cf,WAOE,IAPa,EASmBlC,oBAFV,kBAAMmC,KAAKC,MAAMC,aAAaC,QAAQ,aAAe,MAP9D,mBASNnB,EATM,KASIoB,EATJ,OAUmBvC,mBAAS,IAV5B,mBAUN4B,EAVM,KAUMY,EAVN,KAYbC,qBAAU,WACRJ,aAAaK,QAAQ,UAAWP,KAAKQ,UAAUxB,MAC9C,CAACA,IAEJ,IAaMyB,EAAezB,EAAS0B,QAAO,YACnC,OADiD,EAAX5C,KAC1B6C,cAAcC,SAASnB,EAAWkB,kBAGhD,OACE,gCACE,cAAC,EAAD,CAAShB,MAAM,YAAf,SACE,cAAC,EAAD,CAAa/B,MApBM,SAACiD,GACxB,OAAK7B,EAAS0B,QAAO,SAACvC,GAAD,OAAOA,EAAEL,OAAS+C,EAAW/C,QAAMgD,OAAS,GAC/DV,EAAY,GAAD,mBAAKpB,GAAL,CAAe6B,MACnB,IAETE,MAAM,GAAD,OAAIF,EAAW/C,KAAf,6BACE,QAiBL,eAAC,EAAD,CAAS6B,MAAM,WAAf,UACE,cAAC,EAAD,CAAQF,WAAYA,EAAYb,SAAUyB,IAC1C,cAAC,EAAD,CAAcrB,SAAUyB,EAAcxB,SAhBhB,SAACZ,GAC3B+B,EAAYpB,EAAS0B,QAAO,SAACvB,GAAD,OAAaA,EAAQd,KAAOA,gBC7B5D2C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.0ad4ed2f.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport \"./contactForm.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ContactForm = ({ onAdd }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const handleFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    const id = uuid();\r\n\r\n    if (!name || !number) return;\r\n    if (\r\n      onAdd({\r\n        id,\r\n        name,\r\n        number,\r\n      })\r\n    ) {\r\n      setName(\"\");\r\n      setNumber(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form\r\n      onSubmit={handleFormSubmit}\r\n      style={{\r\n        margin: \"0 auto\",\r\n      }}\r\n    >\r\n      <label>\r\n        Name\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          placeholder=\"Enter name\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n          required\r\n        />\r\n      </label>\r\n\r\n      <label>\r\n        Number\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          placeholder=\"Enter phone number\"\r\n          value={number}\r\n          onChange={(e) => setNumber(e.target.value)}\r\n          required\r\n        />\r\n      </label>\r\n\r\n      <button type=\"submit\">Add Contact</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nContactForm.propTypes = {\r\n  onAdd: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactForm;\r\n","import PropTypes from \"prop-types\";\r\n\r\nconst ContactsList = ({ contacts, onRemove }) => {\r\n  return (\r\n    <ul>\r\n      {contacts.map((contact) => (\r\n        <li key={contact.id}>\r\n          {contact.name.charAt(0).toUpperCase() + contact.name.slice(1)}:{\" \"}\r\n          {contact.number}\r\n          <button onClick={() => onRemove(contact.id)}>Delete</button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactsList.propTypes = {\r\n  onRemove: PropTypes.func.isRequired,\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\n\r\nexport default ContactsList;\r\n","import PropTypes from \"prop-types\";\r\n\r\nconst Filter = ({ filterName, onChange }) => {\r\n  return (\r\n    <form\r\n      style={{\r\n        margin: \"0 auto\",\r\n      }}\r\n    >\r\n      <label>\r\n        Find contacts by name\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={filterName}\r\n          placeholder=\"Enter name for Search\"\r\n          onChange={(e) => onChange(e.target.value)}\r\n        />\r\n      </label>\r\n    </form>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","const Section = ({ title, children }) => {\r\n  return (\r\n    <div>\r\n      <h2\r\n        style={{\r\n          backgroundColor: \"silver\",\r\n          textAlign: \"center\",\r\n        }}\r\n      >\r\n        {title}\r\n      </h2>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n","import { useState, useEffect } from \"react\";\n\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactsList from \"./components/ContactsList/ContactsList\";\nimport Filter from \"./components/Filter/Filter\";\nimport Section from \"./components/Section/Section\";\n\nfunction App() {\n  // const [contacts, setContacts] = useState([\n  //   { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n  //   { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n  //   { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n  //   { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n  // ]);\n  const localContacts = () => JSON.parse(localStorage.getItem(\"contact\")) || [];\n\n  const [contacts, setContacts] = useState(localContacts);\n  const [filterName, setFilter] = useState(\"\");\n\n  useEffect(() => {\n    localStorage.setItem(\"contact\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  const handleAddContact = (newContact) => {\n    if (!contacts.filter((e) => e.name === newContact.name).length > 0) {\n      setContacts([...contacts, newContact]);\n      return true;\n    }\n    alert(`${newContact.name} is already in contacts`);\n    return false;\n  };\n\n  const handleRemoveContact = (id) => {\n    setContacts(contacts.filter((contact) => contact.id !== id));\n  };\n\n  const contactsList = contacts.filter(({ name }) => {\n    return name.toLowerCase().includes(filterName.toLowerCase());\n  });\n\n  return (\n    <div>\n      <Section title=\"Phonebook\">\n        <ContactForm onAdd={handleAddContact} />\n      </Section>\n\n      <Section title=\"Contacts\">\n        <Filter filterName={filterName} onChange={setFilter} />\n        <ContactsList contacts={contactsList} onRemove={handleRemoveContact} />\n      </Section>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}